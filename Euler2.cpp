//============================================================================
// Name        : euler2.cpp
// Description : Each new term in the Fibonacci sequence is generated by adding 
//             : the previous two terms. By starting with 1 and 2, 
//             : the first 10 terms will be:
//             : 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//             : By considering the terms in the Fibonacci sequence whose 
//             : values do not exceed four million, find the sum of the even-valued terms.
//============================================================================

#include <iostream>
using namespace std;

int main() {
	// first and second are used to make the actual fibonacci numbers
	int first=1;
	int second=1;
	int temp;        // used for storage
	int max=4000000; // max posissible fib number
	int sum=0;       // saved off value of even-valued terms

// first sec	
//	1  1
//	2  1 
//	3  2
//	5  8	

	while(first<max)   // don't go higher than the max num
	{
		if(first%2==0) // if it is even add it to our sum
			sum+=first;
		
		temp=first;    // save off the previous value to hand to our adding number
		first+=second; // the actual fib part
		second=temp;   // move what was the previous number into our second num
	}

	cout << "sum: "<< sum << endl;
	return 0;
}
